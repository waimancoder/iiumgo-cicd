name: Testing Development Build
on:
  push:
    branches:
      - testing
jobs:
  run_pull:
    name: pull
    runs-on: ubuntu-20.04

    steps:
      - name: install ssh keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.HOST }} > ~/.ssh/known_hosts
      - name: connect and pull
        run: ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} "cd ${{ secrets.WORK_DIR }} && git checkout ${{ secrets.MAIN_BRANCH }} && git stash && git pull origin ${{ secrets.MAIN_BRANCH }} && exit"
      - name: cleanup
        run: rm -rf ~/.ssh

  build:
    needs: run_pull
    name: Build
    runs-on: ubuntu-20.04
    steps:
      - name: Setup ENV
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd ${{ secrets.WORK_DIR }}
            chmod +x ./envsetup.sh
            ./envsetup.sh
      - name: Replace Settings
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd ${{ secrets.WORK_DIR }}
            cp /root/iiumgo/settings.py /root/iiumgo/venv/lib/python3.10/site-packages/knox/settings.py

      - name: Setup Daphne
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd ${{ secrets.WORK_DIR }}
            chmod +x ./daphne.sh
            ./daphne.sh
      - name: Setup NGINX
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd ${{ secrets.WORK_DIR }}
            chmod +x ./nginx.sh
            ./nginx.sh
