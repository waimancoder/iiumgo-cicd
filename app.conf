map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
    listen 80;
    server_name dev.unigo.ltd;

    error_log /root/iiumgo/logs/mytaxi_error.log;
    access_log /root/iiumgo/logs/mytaxi_info.log;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    server_name dev.unigo.ltd;
    
    
    ssl_certificate /etc/letsencrypt/live/dev.unigo.ltd/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dev.unigo.ltd/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;

    location /static/ {
        alias /static/;
    }

    location / {
        proxy_pass http://localhost:9000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 256 16k;
        proxy_busy_buffers_size 256k;
        proxy_temp_file_write_size 256k;
    }

    location /ws/ {
        if ($http_upgrade != "websocket") {
            return 404;
        }

        proxy_pass http://localhost:9000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # Disable proxy buffering for WebSocket connections
        # proxy_buffering off;
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 256 16k;
        proxy_busy_buffers_size 256k;
        proxy_temp_file_write_size 256k;
        proxy_read_timeout 86400s;
        proxy_connect_timeout 86400s;
        proxy_send_timeout 86400s;

    }
}