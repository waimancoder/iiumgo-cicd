# Generated by Django 4.2 on 2023-06-23 16:01

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Block",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("lat", models.CharField(max_length=255)),
                ("lng", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Driver",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "vehicle_manufacturer",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                (
                    "vehicle_model",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                (
                    "vehicle_color",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                (
                    "vehicle_registration_number",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                (
                    "vehicle_type",
                    models.CharField(
                        blank=True,
                        choices=[("4pax", "4 Seater"), ("6pax", "6 Seater")],
                        max_length=128,
                        null=True,
                    ),
                ),
                (
                    "driver_license_id",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                ("driver_license_expiry_date", models.DateField(blank=True, null=True)),
                (
                    "driver_license_img_front",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="driver-license/front",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                ["jpg", "jpeg", "png"]
                            )
                        ],
                    ),
                ),
                (
                    "driver_license_img_back",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="driver-license/back",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                ["jpg", "jpeg", "png"]
                            )
                        ],
                    ),
                ),
                (
                    "idConfirmation",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="driver-id-confirmation",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                ["jpg", "jpeg", "png"]
                            )
                        ],
                    ),
                ),
                (
                    "vehicle_img",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="driver-vehicle-img",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                ["jpg", "jpeg", "png"]
                            )
                        ],
                    ),
                ),
                (
                    "roadtax",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="driver-roadtax",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                ["jpg", "jpeg", "png"]
                            )
                        ],
                    ),
                ),
                (
                    "statusDriver",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("submitting", "Submitting"),
                            ("pending", "Pending"),
                            ("activated", "Activated"),
                            ("failed", "Failed"),
                            ("verified", "Verified"),
                        ],
                        default="submitting",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "statusMessage",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                (
                    "jobDriverStatus",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("available", "Available"),
                            ("unavailable", "Unavailable"),
                            ("enroute_pickup", "Heading to Passenger"),
                            ("waiting_pickup", "Waiting for Passenger"),
                            ("in_transit", "In Transit with Passenger"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "vehicle_ownership",
                    models.CharField(
                        blank=True,
                        choices=[("owned", "Owned"), ("rented", "Rented")],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("ride_request", models.UUIDField(blank=True, null=True)),
            ],
            options={
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="DriverLocation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                ("polygon", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="DriverRating",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("passenger", models.UUIDField(blank=True, null=True)),
                (
                    "rating",
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                ("review", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("lat", models.CharField(blank=True, max_length=255, null=True)),
                ("lng", models.CharField(blank=True, max_length=255, null=True)),
                ("keywords", models.TextField(blank=True, null=True)),
                (
                    "subLocality",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("locality", models.CharField(blank=True, max_length=255, null=True)),
                ("polygon", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Ride",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("status", models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name="Trip",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("origin", models.CharField(blank=True, max_length=256, null=True)),
                (
                    "destination",
                    models.CharField(blank=True, max_length=256, null=True),
                ),
                ("start_time", models.DateTimeField(blank=True, null=True)),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                (
                    "driver",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trips",
                        to="rides.driver",
                    ),
                ),
            ],
        ),
    ]
